openapi: 3.0.0
info:
  title: voices-of-dissent
  version: 1.0.0
paths:
  /covers:
    get:
      summary: Covers
      description: >-
        returns array of at least three cover art selections to use for main
        page
      responses:
        '200':
          description: successful response will have the cover urls chosen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoversResponse'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Covers_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /delete/{artist}/{id}:
    delete:
      summary: Delete
      description: deletes the designated submission
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Delete_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /info/{id}/{name}/{email}:
    get:
      summary: Info
      description: sets and returns information recorded for a logged in user
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Info_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    parameters:
      - in: path
        name: id
        description: the UserIdentity string for this user from login
        required: true
        schema:
          type: string
      - in: path
        name: name
        description: the name of this user
        required: true
        schema:
          type: string
      - in: path
        name: email
        description: the email of this user
        required: true
        schema:
          type: string
  /like/{likerId}/{artistId}/{contentId}/{likeType}:
    get:
      summary: Like
      description: (PUT) return number of likes, optionally adding or subtracting to count
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeResponse'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Like_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    parameters:
      - in: path
        name: likerId
        description: the user Id of the person doing the liking
        required: true
        schema:
          type: string
      - in: path
        name: artistId
        description: the artistId of the content being liked
        required: true
        schema:
          type: string
      - in: path
        name: contentId
        description: the contentId of the content being liked
        required: true
        schema:
          type: string
      - in: path
        name: likeType
        description: |-
          type of like operation
            - "oneof" is not a recognized constraint for string
        required: true
        schema:
          type: string
  /secrets:
    get:
      summary: Secrets
      description: Returns the secrets for this app as a full json object
      responses:
        '200':
          description: json object containing secret keys and values for this app
          content:
            text/plain:
              schema:
                type: object
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Secrets_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /skips/{identity}:
    post:
      summary: Skips
      description: >-
        Records the items marked as skipped for this user. array of skip ids is
        in body
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Skips_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    parameters:
      - in: path
        name: identity
        description: The identity of the logged in user
        required: true
        schema:
          type: string
  /tracks/{artist}/{id}:
    get:
      summary: Tracks
      description: >-
        returns the list of tracks currently available. each invocation is a new
        shuffled order
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackInfo'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:Tracks_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    parameters:
      - in: path
        name: artist
        description: the id of the artist for a specific track,, undefined for all tracks
        required: true
        schema:
          type: string
      - in: path
        name: id
        description: >-
          the id of a specific piece of content for a specific track, undefined
          for all tracks
        required: true
        schema:
          type: string
  /chunk/{uploadId}/{fileKey}/{chunkIndex}:
    post:
      summary: UploadChunk
      description: uploads a chunk of data in a multi-chunk file transfer. data in body
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:UploadChunk_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        contentHandling: CONVERT_TO_BINARY
        httpMethod: POST
        type: aws_proxy
    parameters:
      - in: path
        name: uploadId
        description: The upload Id returned from UploadStart
        required: true
        schema:
          type: string
      - in: path
        name: fileKey
        description: |-
          fileKey - replace / characters with : before submitting
            - must contain substring ":"
        required: true
        schema:
          type: string
      - in: path
        name: chunkIndex
        description: |-
          which number chunk this is in sequence
            - number must be an integer
            - number must be positive
            - Minimum value is 0
        required: true
        schema:
          type: number
  /complete/{uploadId}/{fileKey}:
    get:
      summary: UploadComplete
      description: Completes the upload of an asset
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:UploadComplete_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    parameters:
      - in: path
        name: uploadId
        description: the uploadId we have completed chunk transfer for
        required: true
        schema:
          type: string
      - in: path
        name: fileKey
        description: |-
          fileKey - replace / characters with : before submitting
            - must contain substring ":"
        required: true
        schema:
          type: string
  /finalize:
    post:
      summary: UploadFinal
      description: finalizes the binding of uploaded urls to the main
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinalizeResponse'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:UploadFinal_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    parameters: []
  /upstart/{artistId}/{id}:
    post:
      summary: UploadStart
      description: inititates the start of an upload
      responses:
        '200':
          description: successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '500':
          type: string
          description: Error details
          content:
            text/plain:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-1:545650260286:function:UploadStart_-__voices-of-dissent_b8bd483b/invocations
        passthroughbehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
components:
  schemas:
    CoversResponse:
      type: array
      items:
        type: string
      title: CoversResponse
      description: An array of urls to selected covers
    Empty:
      title: Empty Schema
      type: object
    InfoResponse:
      $ref: '#/components/schemas/Empty'
      title: InfoResponse
      description: Data returned for user info
    LikeResponse:
      $ref: '#/components/schemas/Empty'
      title: LikeResponse
      description: response of Like operation
    SkipsResponse:
      $ref: '#/components/schemas/Empty'
      title: SkipsResponse
    TrackInfo:
      $ref: '#/components/schemas/Empty'
      title: TrackInfo
    FinalizeResponse:
      $ref: '#/components/schemas/Empty'
      title: FinalizeResponse
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
tags: []
servers: []
x-amazon-apigateway-binary-media-types:
  - application/octet-stream
  - image/*
  - audio/*
